1)Load and display an image using OpenCV

import cv2
from matplotlib import pyplot as plt
# Load image using OpenCV
image_path = 'F:/ODDSEM/BDA21CS71/BDANEW/Google.jpg' # replace with the path to 
your image
img = cv2.imread(image_path)
# Convert the image from BGR (OpenCV default) to RGB
img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
# Display the image using matplotlib (since cv2.imshow() doesn't work well in Jupyter)
plt.imshow(img_rgb)
plt.axis('off') # Turn off axis labels
plt.show()

2)Load and display an image using Pillow

from PIL import Image
import matplotlib.pyplot as plt
# Load image using Pillow
image_path = 'F:/ODDSEM/BDA21CS71/BDANEW/Google.jpg' # replace with the path to 
your image
img_pillow = Image.open(image_path)
# Display the image
plt.imshow(img_pillow)
plt.axis('off') # Turn off axis labels
plt.show()

3)Experiment: Perform image resizing and cropping OpenCV and Pillow

Step: Perform image resizing using OpenCV.
# Resizing
# You can resize an image using cv2.resize().
import cv2
# Load an image
image = cv2.imread('F:/ODDSEM/BDA21CS71/BDANEW/Google.jpg')
# Resize the image to specific dimensions (e.g., 300x300 pixels)
resized_image = cv2.resize(image, (300, 300))
# Save the resized image
cv2.imwrite('resized_image.jpg', resized_image)
# Display the resized image
cv2.imshow('Resized Image', resized_image)
cv2.waitKey(0)
cv2.destroyAllWindows()

4)cropping using opencv
# Cropping
# To crop an image, you need to specify the region of interest (ROI) using array slicing.
# Cropping coordinates: (startY, startX) to (endY, endX)
cropped_image = image[50:200, 100:300]
# Save the cropped image
cv2.imwrite('cropped_image.jpg', cropped_image)
# Display the cropped image
cv2.imshow('Cropped Image', cropped_image)
cv2.waitKey(0)
cv2.destroyAllWindows()

5)resizing using pillow
# Resizing
# In Pillow, resizing can be done with the resize() method.
from PIL import Image
# Load an image
from PIL import Image
# Load an image
image = Image.open('F:/ODDSEM/BDA21CS71/BDANEW/Google.jpg')
# Resize the image (e.g., 300x300 pixels)
resized_image = image.resize((300, 300))
# Save the resized image
resized_image.save('resized_image_pillow.jpg')
# Display the resized image
resized_image.show()

6)cropping using pillow
# Cropping
# For cropping, you can use the crop() method, which takes a tuple (left, upper, right, lower) 
to define the bounding box.
# Define the cropping box: (left, upper, right, lower)
cropped_image = image.crop((100, 50, 300, 200))
# Save the cropped image
cropped_image.save('cropped_image_pillow.jpg')
# Display the cropped image
cropped_image.show()
